kukoin_token_list = ["BTC-USDT", "ETH-USDT", "SOL-USDT", "BNB-USDT", "TON-USDT", "UNI-USDT", "LTC-USDT", "APT-USDT", "GGGG"]
binance_token_list = ["BTCUSDT", "ETHUSDT", "SOLUSDT", "BNBUSDT", "TONUSDT", "UNIUSDT", "LTCUSDT", "APTUSDT", "FFFF"]
kukoin_data = {}
binance_data = {}

import requests

url = f"https://api.kucoin.com/api/v1/market/allTickers"
for item in kukoin_token_list:
    response = requests.get(url)
    if response.status_code == 200:
        request = response.json()
        for token in request["data"]["ticker"]:
            symbol = token["symbol"]
            price = token["last"]
            if symbol == item:
                price = float(price)
                kukoin_data[item] = price
            # else:
            #     print(f'Нет такой пары на бирже - ', symbol)
    elif response.status_code == 429:
            print("Kucoin API rate limit")
    elif response.status_code == 400:
            print("Bad request Kucoin", {item})
    elif response.status_code == 404:
            print("URL Not Found")

# print(kukoin_data)

import requests

url = "https://api.binance.com/api/v3/ticker/price"
headers = {"accept": "application/json, text/plain, */*"}
for item in binance_token_list:
    param = {"symbol": item }
    response = requests.get(url=url, params=param, headers=headers)
    if response.status_code == 200:
            request = response.json()
            price = float(request.get("price"))
            binance_data[item] = price
    elif response.status_code == 429:
        print("Binance API rate limit")
    elif response.status_code == 400:
        print("Bad request Binance", {item})
    elif response.status_code == 404:
        print("URL Not Found")

# print(binance_data)

kukoin_price = list(kukoin_data.values())
binance_price = list(binance_data.values())
# print(kukoin_price)
# print(binance_price)

def spread_calculator():
    if a > b and ((a - b)/a) > 0.00001:
        spread = ((a - b)/a)*100
        return spread
    elif b > a and ((b - a)/b) > 0.00001:
        spread = ((b - a)/b)*100
        return spread
    else:
        print('Спред меньше 0.001%')

def profit_calculator():
    if a > b :
        profit = a - b
        return profit
    elif b > a:
        profit = b - a
        return profit

# def pair_display():
#     for i in range(len(binance_token_list)):
#        pair = binance_token_list[i]
#     return pair
#
# pair = pair_display()
# print(pair)

for i in range(len(kukoin_price)):
    a = kukoin_price[i]
    b = binance_price[i]
    spread = spread_calculator()
    profit = profit_calculator()
    # pair = pair_display()
    print(f'---------------------------')
    print(f'Kucoin:', format(a, '.2f'),'$')
    print(f'Binance:', format(b, '.2f'),'$')
    print(f'Профит:', format(profit, '.3f'), '$')
    print(f'Спред:', '{:.3f}'.format(spread),'%')
