
import json

kucoin_token_list = []
binance_token_list = []

kucoin_data = {}
binance_data = {}

try:
    with open('kucoin_token_list.txt', 'r', encoding="utf-8") as file:
        kucoin_token_list = file.read().splitlines()
except:
    print("Файл по указанному пути не найден")

try:
    with open('binance_token_list.txt', 'r', encoding="utf-8") as file:
        binance_token_list = file.read().splitlines()
except:
    print("Файл по указанному пути не найден")

# print(binance_token_list)
# print(kucoin_token_list)

# kucoin_token_list = ["BTC-USDT", "ETH-USDT", "SOL-USDT", "BNB-USDT", "TON-USDT", "UNI-USDT", "LTC-USDT", "APT-USDT", "BONK"]
# binance_token_list = ["BTCUSDT", "ETHUSDT", "SOLUSDT", "BNBUSDT", "TONUSDT", "UNIUSDT", "LTCUSDT", "APTUSDT", "BONK"]
kucoin_data = {}
binance_data = {}

import requests

url = f"https://api.kucoin.com/api/v1/market/allTickers"
for item in kucoin_token_list:
    response = requests.get(url)
    if response.status_code == 200:
        request = response.json()
        for token in request["data"]["ticker"]:
            symbol = token["symbol"]
            price = token["last"]
            if symbol == item:
                price = float(price)
                kucoin_data[item] = price
            # else:
            #     print(f'Нет такой пары на бирже - ', symbol)
    elif response.status_code == 429:
            print("Kucoin API rate limit")
    elif response.status_code == 400:
            print("!! Bad request Kucoin", {item}, '!!')
    elif response.status_code == 404:
            print("URL Not Found")


with open("kucoin_data.json", "w", encoding="utf-8") as file:
  json.dump(kucoin_data, file, ensure_ascii=False, indent=4)

with open("kucoin_data.json", "r", encoding="utf-8") as file:
  kucoin_data = json.load(file)

# print(kucoin_data)

import requests

url = "https://api.binance.com/api/v3/ticker/price"
headers = {"accept": "application/json, text/plain, */*"}
for item in binance_token_list:
    param = {"symbol": item }
    response = requests.get(url=url, params=param, headers=headers)
    if response.status_code == 200:
            request = response.json()
            price = float(request.get("price"))
            binance_data[item] = price
    elif response.status_code == 429:
        print("Binance API rate limit")
    elif response.status_code == 400:
        print("!! Bad request Binance", {item}, '!!')
    elif response.status_code == 404:
        print("URL Not Found")

with open("binance_data.json", "w", encoding="utf-8") as file:
  json.dump(binance_data, file, ensure_ascii=False, indent=4)

with open("binance_data.json", "r", encoding="utf-8") as file:
  binance_data = json.load(file)

# print(binance_data)

kucoin_price = list(kucoin_data.values())
binance_price = list(binance_data.values())
# print(kucoin_price)
# print(binance_price)

def spread_calculator():
    if a > b and ((a - b)/a) > 0.00001:
        spread = ((a - b)/a)*100
        return spread
    elif b > a and ((b - a)/b) > 0.00001:
        spread = int(((b - a)/b)*100)
        return spread
    else:
        print('Спред меньше 0.001%')

def profit_calculator():
    if a > b :
        profit = a - b
        return profit
    elif b > a:
        profit = int(b - a)
        return profit

for i in range(len(kucoin_price)):
    a = kucoin_price[i]
    b = binance_price[i]
    spread = spread_calculator()
    profit = profit_calculator()
    print(f'-------{binance_token_list[i]}-------')
    print(f'Kucoin:', format(a, '.2f'),'$')
    print(f'Binance:', format(b, '.2f'),'$')
    print(f'Профит:', format(profit, '.2f'), '$')
    print(f'Спред:', '{:.3f}'.format(spread),'%')
